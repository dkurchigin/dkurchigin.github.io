<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Типичный Python разработчик - diy</title><link href="https://dkurchigin.github.io/" rel="alternate"></link><link href="https://dkurchigin.github.io/feeds/diy.atom.xml" rel="self"></link><id>https://dkurchigin.github.io/</id><updated>2023-10-21T16:00:00+03:00</updated><subtitle>О программировании, мелочах жизни и многом другом...</subtitle><entry><title>Управление Arduino и MG995 с помощью Rust</title><link href="https://dkurchigin.github.io/arduino-with-rust-mg995" rel="alternate"></link><published>2023-10-21T16:00:00+03:00</published><updated>2023-10-21T16:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2023-10-21:/arduino-with-rust-mg995</id><summary type="html">&lt;p&gt;MG995 - 360градусный сервопривод&lt;/p&gt;</summary><content type="html">&lt;p&gt;Привет!&lt;/p&gt;
&lt;p&gt;Для управления &lt;strong&gt;MG995&lt;/strong&gt; написал &lt;a href="https://github.com/dkurchigin/mg995_servo"&gt;&lt;strong&gt;свой пакет&lt;/strong&gt;&lt;/a&gt;, т.к. каких-либо примеров работы с этим сервоприводом в интернете очень мало.
Ориентировался на библиотеку &lt;strong&gt;Servo&lt;/strong&gt; в &lt;strong&gt;Arduino&lt;/strong&gt;, т.к. она написана очень приятно - создаешь класс и вызываешь несколько методов для работы.&lt;/p&gt;
&lt;p&gt;Сейчас данная библиотека использует порт &lt;strong&gt;D9&lt;/strong&gt; и &lt;strong&gt;Timer1&lt;/strong&gt;. 
При создании объекта можно установить свой &lt;strong&gt;&lt;em&gt;duty&lt;/em&gt;&lt;/strong&gt;, если необходимо подкорректировать настройки сервопривода.&lt;/p&gt;
&lt;p&gt;Для моих сервоприводов для вращения по часовой стрелке, остановки, вращения против часовой стрелки использую следующие &lt;strong&gt;&lt;em&gt;duty&lt;/em&gt;&lt;/strong&gt; при инициализации:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LEFT_DUTY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;u8&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;STOP_DUTY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;u8&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;pub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;RIGHT_DUTY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;u8&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;К примеру, если двигатель не останавливается с &lt;strong&gt;&lt;em&gt;STOP_DUTY = 22&lt;/em&gt;&lt;/strong&gt;, можно подкорректировать. К примеру, установить 21/23 и тд.&lt;/p&gt;
&lt;h3&gt;Пример использования&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;#!&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;no_std&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;#!&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;no_main&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;extern&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;crate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;arduino_hal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;extern&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;crate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mg995_servo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;panic_halt&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;as&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;arduino_hal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;hal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;simple_pwm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;arduino_hal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;simple_pwm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:{&lt;/span&gt;&lt;span class="n"&gt;Timer1Pwm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;IntoPwmPin&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;mg995_servo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:{&lt;/span&gt;&lt;span class="n"&gt;MG995&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LEFT_DUTY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;STOP_DUTY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;RIGHT_DUTY&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;arduino_hal::entry&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;arduino_hal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;Peripherals&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;take&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;unwrap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pins&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;arduino_hal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;pins&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;timer1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;Timer1Pwm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TC1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;simple_pwm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="nl"&gt;Prescaler&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Prescale1024&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;servo_pin&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pins&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;d9&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;into_output&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;into_pwm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;timer1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mut&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mg995&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;MG995&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;servo_pin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;STOP_DUTY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LEFT_DUTY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;RIGHT_DUTY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;mg995&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;mg995&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nl"&gt;arduino_hal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;mg995&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;right&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nl"&gt;arduino_hal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;mg995&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nl"&gt;arduino_hal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;mg995&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;left&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nl"&gt;arduino_hal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;delay_ms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="diy"></category><category term="programming"></category><category term="robot"></category><category term="rust"></category><category term="arduino"></category></entry><entry><title>Программирование Arduino с помощью Rust</title><link href="https://dkurchigin.github.io/arduino-with-rust" rel="alternate"></link><published>2023-10-15T16:00:00+03:00</published><updated>2023-10-15T16:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2023-10-15:/arduino-with-rust</id><summary type="html">&lt;p&gt;Шьём Arduino через Rust&lt;/p&gt;</summary><content type="html">&lt;p&gt;Привет!&lt;/p&gt;
&lt;p&gt;Дошли руки и появилось настроение написать статью как я стал прошивать &lt;strong&gt;Arduino Nano&lt;/strong&gt; через &lt;strong&gt;Rust&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;Как всё это выглядит&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;прошиваю через &lt;strong&gt;USB&lt;/strong&gt;, запоминаю название этого &lt;strong&gt;COM&lt;/strong&gt;-порта&lt;/li&gt;
&lt;li&gt;для прошивки использую &lt;a href="https://github.com/Rahix/avr-hal/tree/main"&gt;&lt;strong&gt;этот пакет&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PROFIT!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h3&gt;А теперь по порядку&lt;/h3&gt;
&lt;p&gt;Подключаю плату к компьютеру, затем надо установить все необходимые зависимости для &lt;a href="https://github.com/Rahix/avr-hal/tree/main#quickstart"&gt;&lt;strong&gt;avr-hal&lt;/strong&gt;&lt;/a&gt;, ну и сам &lt;strong&gt;Rust&lt;/strong&gt;, разумеется.
Следуя инструкции к пакету выполняю все шаги и делаю:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    cargo build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Если не установлена нужная настройка фичи (&lt;strong&gt;&lt;em&gt;в виде  вашей платы&lt;/em&gt;&lt;/strong&gt;), то пакет это сообщит и спросит наш выбор. 
У меня настройка выглядит так: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    features = [&amp;quot;arduino-nano&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;После написания программы необходимо ее залить с помощью команды:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    cargo run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Настройки прошивалки можно посмотреть в файле &lt;strong&gt;&lt;em&gt;.cargo/config.toml&lt;/em&gt;&lt;/strong&gt; У меня он выглядит так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;avr-specs/avr-atmega328p.json&amp;quot;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;target.&amp;#39;cfg(target_arch = &amp;quot;avr&amp;quot;)&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;runner&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;ravedude nano -cb 57600 -P COM5&amp;quot;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;unstable&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;&amp;quot;core&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Дополнительные настройки платы формируются пакетом автоматически. Посмотреть можно по этому пути &lt;strong&gt;&lt;em&gt;avr-specs/avr-atmega328p.json&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    {
      &amp;quot;arch&amp;quot;: &amp;quot;avr&amp;quot;,
      &amp;quot;atomic-cas&amp;quot;: false,
      &amp;quot;cpu&amp;quot;: &amp;quot;atmega328p&amp;quot;,
      &amp;quot;data-layout&amp;quot;: &amp;quot;e-P1-p:16:8-i8:8-i16:8-i32:8-i64:8-f32:8-f64:8-n8-a:8&amp;quot;,
      &amp;quot;eh-frame-header&amp;quot;: false,
      &amp;quot;exe-suffix&amp;quot;: &amp;quot;.elf&amp;quot;,
      &amp;quot;executables&amp;quot;: true,
      &amp;quot;late-link-args&amp;quot;: {
        &amp;quot;gcc&amp;quot;: [
          &amp;quot;-lgcc&amp;quot;
        ]
      },
      &amp;quot;linker&amp;quot;: &amp;quot;avr-gcc&amp;quot;,
      &amp;quot;llvm-target&amp;quot;: &amp;quot;avr-unknown-unknown&amp;quot;,
      &amp;quot;max-atomic-width&amp;quot;: 8,
      &amp;quot;no-default-libraries&amp;quot;: false,
      &amp;quot;pre-link-args&amp;quot;: {
        &amp;quot;gcc&amp;quot;: [
          &amp;quot;-mmcu=atmega328p&amp;quot;
        ]
      },
      &amp;quot;target-c-int-width&amp;quot;: &amp;quot;16&amp;quot;,
      &amp;quot;target-pointer-width&amp;quot;: &amp;quot;16&amp;quot;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="diy"></category><category term="programming"></category><category term="robot"></category><category term="rust"></category><category term="arduino"></category></entry><entry><title>Как я менял прошивку на смартфоне Redmi 9A</title><link href="https://dkurchigin.github.io/about-os-in-smartphone" rel="alternate"></link><published>2023-09-17T16:00:00+03:00</published><updated>2023-09-17T16:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2023-09-17:/about-os-in-smartphone</id><summary type="html">&lt;p&gt;Философские размышления о рептилоидах и дерьмовом качестве ПО&lt;/p&gt;</summary><content type="html">&lt;p&gt;Привет!&lt;/p&gt;
&lt;p&gt;Меня всегда смущали смартфоны с их закрытым ПО и навязыванием технологий/подходов во время их работы. Несколько дней назад у меня дошли руки попробовать сменить операционку на смартфоне, т.к. количество негатива стало зашкаливать.&lt;/p&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h3&gt;Собственно, негатив:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;смартфон постоянно что-то откуда-то качает либо что-то куда-то передаёт&lt;/li&gt;
&lt;li&gt;постоянные зависания и странное поведение&lt;/li&gt;
&lt;li&gt;навязывание приложений/новостей&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h3&gt;С какими проблемами я столкнулся при перепрошивке:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;очень малое количество устройств&lt;/li&gt;
&lt;li&gt;у кучи проектов нет адекватных TODO, утилит для установки. Сложно разобраться как и что обновлять&lt;/li&gt;
&lt;li&gt;часть сайтов с ошибками, к примеру, не грузит список устройств из базы, а в консоле браузера ошибки в &lt;strong&gt;JS&lt;/strong&gt;, лол&lt;/li&gt;
&lt;li&gt;одна из прошивок окирпичила мой смартфон&lt;/li&gt;
&lt;li&gt;официальные прошивки ставятся за 2-3 клика, неофициальные ставятся только с шаманскими бубнами&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h3&gt;Чем всё кончилось:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;я успешно окирпичил телефон&lt;/li&gt;
&lt;li&gt;плюнул и поставил чистую &lt;strong&gt;MIUI 12&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;максимально всё отключил(улучшалки, анимации, сбор и отправки данных)&lt;/li&gt;
&lt;li&gt;удалил ненужные приложения&lt;/li&gt;
&lt;li&gt;одел шапочку из фольги&lt;/li&gt;
&lt;li&gt;подумал о том, что возможно у &lt;strong&gt;Ubuntu Touch&lt;/strong&gt; есть будущее, т.к. это единственное, что выглядит максимально структурированно и приятно, но устройств мало&lt;/li&gt;
&lt;/ul&gt;</content><category term="diy"></category><category term="smartphone"></category><category term="open source"></category></entry><entry><title>Восстанавливаем коллекторный мотор</title><link href="https://dkurchigin.github.io/repair-dc-motor" rel="alternate"></link><published>2018-10-13T16:00:00+03:00</published><updated>2018-10-13T16:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2018-10-13:/repair-dc-motor</id><summary type="html">&lt;p&gt;Около года у меня валялся один электромотор, который постоянно заклинивал&lt;/p&gt;</summary><content type="html">&lt;p&gt;Привет!&lt;/p&gt;
&lt;p&gt;Около года у меня валялся один &lt;strong&gt;электромотор&lt;/strong&gt;, который постоянно заклинивал...&lt;/p&gt;
&lt;p&gt;За всё это время я так и не мог набраться смелости для того, чтобы его развальцевать. Всё дело в том, что я не мог придумать, как его потом собрать обратно.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;План&lt;/strong&gt; был такой:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;0 - Развальцевать двигатель&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1 - Заменить/смазать проблемный подшипник&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;2 - Собрать&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;3 - МОТОР ПОЧИНЕН&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Сильно был удивлен, когда не обнаружил ни единого подшипника. Оказалось, китайский инженер просто поставил какое-то медное кольцо, которое должно было выполнять функцию подшипника, оно-то и заклинивало на валу.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Как итог&lt;/strong&gt;: поставлен подшипник, сделаны отверстия, нарезана метчиком резьба &lt;strong&gt;M3&lt;/strong&gt; и смоделирована крышечка.&lt;/p&gt;
&lt;p&gt;&lt;img alt="В разборе" src="https://dkurchigin.github.io/theme/images/P81007-165621.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="С аккумами" src="https://dkurchigin.github.io/theme/images/P81013-211955.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Собираю" src="https://dkurchigin.github.io/theme/images/P81013-212324.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="В сборе" src="https://dkurchigin.github.io/theme/images/P81013-214115.jpg"&gt;&lt;/p&gt;</content><category term="diy"></category><category term="diy"></category><category term="3d"></category></entry><entry><title>Robot MK1</title><link href="https://dkurchigin.github.io/robotmk1-review" rel="alternate"></link><published>2016-09-25T16:00:00+03:00</published><updated>2016-09-25T16:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2016-09-25:/robotmk1-review</id><summary type="html">&lt;p&gt;Наконец-то сделал первый прототип роботизированной платформы&lt;/p&gt;</summary><content type="html">&lt;p&gt;Привет!&lt;/p&gt;
&lt;p&gt;Наконец-то сделал первый прототип роботизированной платформы.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=aime3uzfUlw"&gt;&lt;img alt="Прототип робота на Arduino" src="https://img.youtube.com/vi/aime3uzfUlw/0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Приемник и передатчик:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Первая картинка" src="https://dkurchigin.github.io/theme/images/tumblr_inline_oe2gr3TUtQ1td8cty_503.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Вторая картинка" src="https://dkurchigin.github.io/theme/images/tumblr_inline_oe2grcLuT71td8cty_504.jpg"&gt;&lt;/p&gt;
&lt;p&gt;В дальнейшем буду делать алюминиевый корпус + немного сервоприводов для манипулятора.&lt;/p&gt;</content><category term="diy"></category><category term="programming"></category><category term="robot"></category><category term="arduino"></category><category term="diy"></category></entry><entry><title>Самодельная Li-Ion зарядка</title><link href="https://dkurchigin.github.io/charger" rel="alternate"></link><published>2016-09-04T16:00:00+03:00</published><updated>2016-09-04T16:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2016-09-04:/charger</id><summary type="html">&lt;p&gt;QX4054 + LM7805 + обвязка = универсальная Li-ion зарядка!&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="DIY Charger" src="https://dkurchigin.github.io/theme/images/tumblr_oczbmuQZLZ1uh3r1eo1_1286.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;QX4054&lt;/strong&gt; + &lt;strong&gt;LM7805&lt;/strong&gt; + обвязка = универсальная &lt;strong&gt;Li-ion&lt;/strong&gt; зарядка!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;QX4054&lt;/strong&gt; - копия микросхемы &lt;strong&gt;LTC4054&lt;/strong&gt;(микросхема для Li-ion аккумуляторов с отключением зарядки по достижению напряжения 4,2 Вольта, при падении зарядного тока либо при перегреве микросхемы в 70 градусов Цельсия). &lt;a href="http://cds.linear.com/docs/en/datasheet/405442xf.pdf"&gt;&lt;strong&gt;Ссылочка на даташитик&lt;/strong&gt;&lt;/a&gt;. Сами аккумы от &lt;strong&gt;Панасоника&lt;/strong&gt; брал &lt;a href="http://svetotron.ru/catalog/akkumulyatory/li-ion/panasonic/18650-3.7-v-3400-mach-zaschischennyy_1/"&gt;&lt;strong&gt;здесь&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;</content><category term="diy"></category><category term="diy"></category><category term="pcb"></category></entry><entry><title>Настольные часы на Ардуино - Обзор</title><link href="https://dkurchigin.github.io/watches-arduino-review" rel="alternate"></link><published>2016-04-24T16:00:00+03:00</published><updated>2016-04-24T16:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2016-04-24:/watches-arduino-review</id><summary type="html">&lt;p&gt;Наконец-то дошли руки до завершающего поста по настольным часам на Ардуино&lt;/p&gt;</summary><content type="html">&lt;p&gt;Привет!&lt;/p&gt;
&lt;p&gt;Наконец-то дошли руки до завершающего поста по настольным часам на &lt;strong&gt;Ардуино&lt;/strong&gt;. Удалось реализовать установку, просмотр и сброс будильника, таймера, текущего времени. Таймер и будильник работают независимо друг от друга. Если в &lt;strong&gt;RTC&lt;/strong&gt; села батарейка — на экране появится надпись &lt;strong&gt;RTC&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Была идея реализовать возможность установки нескольких таймеров и будильников, а также установку будильника на конкретные дни недели, но это было бы ни к чему.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Часы крупным планом" src="https://dkurchigin.github.io/theme/images/tumblr_inline_odwa39wXHU1td8cty_500.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Пример работы представлен на видео:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=_cTB6HarbBY"&gt;&lt;img alt="Видеообзор часов на ардуино" src="https://img.youtube.com/vi/_cTB6HarbBY/0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Компоненты:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Китайская &lt;a href="https://ru.aliexpress.com/item/1PCS-Nano-3-0-controller-compatible-with-nano-CH340-USB-driver-NO-CABLE-for-Arduino-NANO/32473529871.html?dp=b3b7663955133352c3b7f3788a027df2&amp;amp;af=240682&amp;amp;cv=47843&amp;amp;afref=http%253A%252F%252Ft.umblr.com&amp;amp;mall_affr=pr3&amp;amp;aff_platform=aaf&amp;amp;cpt=1504545854821&amp;amp;sk=VnYZvQVf&amp;amp;aff_trace_key=9a1c35f46c6f4fc7bd922dc609b729bb-1504545854821-00944-VnYZvQVf"&gt;&lt;strong&gt;Arduino Nano&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.chipdip.ru/product/cc04-41srwa"&gt;&lt;strong&gt;LED&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://amperka.ru/product/troyka-rtc"&gt;&lt;strong&gt;RTC от Амперки&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;74HC595*2&lt;/li&gt;
&lt;li&gt;Резистор 220 Ом*14&lt;/li&gt;
&lt;li&gt;Резистор10 кОм*4&lt;/li&gt;
&lt;li&gt;Резистор 1кОм*2&lt;/li&gt;
&lt;li&gt;Транзистор*2&lt;/li&gt;
&lt;li&gt;Кнопки*4&lt;/li&gt;
&lt;li&gt;Пищалка&lt;/li&gt;
&lt;li&gt;И немного колодок…&lt;/li&gt;
&lt;/ul&gt;</content><category term="diy"></category><category term="programming"></category><category term="arduino"></category></entry><entry><title>Часы на Ардуино</title><link href="https://dkurchigin.github.io/watches-arduino" rel="alternate"></link><published>2016-04-17T16:00:00+03:00</published><updated>2016-04-17T16:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2016-04-17:/watches-arduino</id><summary type="html">&lt;p&gt;Наконец-то доделал свой первый самостоятельный проект - настольные часы на Ардуино!&lt;/p&gt;</summary><content type="html">&lt;p&gt;Привет!&lt;/p&gt;
&lt;p&gt;Наконец-то доделал свой первый самостоятельный проект - настольные часы на &lt;strong&gt;Ардуино&lt;/strong&gt;! Из-за своей лени и занятости на всё про всё ушло ~5 месяцев. Так они выглядят со стороны.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=E_2C5k19Tng"&gt;&lt;img alt="Видеообзор часов на ардуино" src="https://img.youtube.com/vi/E_2C5k19Tng/0.jpg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;По поводу корпуса - еще не придумал, возможно, сделаю из оргстекла…&lt;/p&gt;</content><category term="diy"></category><category term="programming"></category><category term="arduino"></category></entry></feed>