<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Типичный Python разработчик - python</title><link href="https://dkurchigin.github.io/" rel="alternate"></link><link href="https://dkurchigin.github.io/feeds/python.atom.xml" rel="self"></link><id>https://dkurchigin.github.io/</id><updated>2023-09-19T16:00:00+03:00</updated><subtitle>О программировании, мелочах жизни и многом другом...</subtitle><entry><title>Как я искал работу на уровень Middle Python</title><link href="https://dkurchigin.github.io/job-search-2023" rel="alternate"></link><published>2023-09-19T16:00:00+03:00</published><updated>2023-09-19T16:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2023-09-19:/job-search-2023</id><summary type="html">&lt;p&gt;Статья актуальна для 2023 года&lt;/p&gt;</summary><content type="html">&lt;p&gt;Привет!&lt;/p&gt;
&lt;p&gt;Хочу поделиться опытом как я менял работу осенью 2023 года, выразить своё мнение и развеить парочку мифов. 
Забегая вперед скажу, что поиск на &lt;strong&gt;HH&lt;/strong&gt; произошел практически в холостую, все в молоко, никакого мэтча. При этом очень много хороших вариантов было получено через LinkedIn.&lt;/p&gt;
&lt;p&gt;Хочу поблагодарить &lt;a href="https://www.linkedin.com/in/varvara-mishina-0556a0167/"&gt;&lt;strong&gt;Варвару Мишину&lt;/strong&gt;&lt;/a&gt; из компании &lt;a href="https://cerebro.team/"&gt;&lt;strong&gt;CEREBRO&lt;/strong&gt;&lt;/a&gt;. 
В итоге мэтч произошел через неё.&lt;/p&gt;
&lt;p&gt;Поиск работы выглядел для меня стандартно, таким алгоритмом я пользовался уже второй раз:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;сначала определил желаемую вилку &lt;strong&gt;ЗП&lt;/strong&gt;, желаемые обязанности и явные красные флажки&lt;/li&gt;
&lt;li&gt;подредактировал резюме, обновил опыт, технологии, что-то в старом опыте сократил, более подробно описал текущий/последний&lt;/li&gt;
&lt;li&gt;разослал резюме знакомым &lt;strong&gt;HR&lt;/strong&gt;-ам, с кем я когда-либо переписывался&lt;/li&gt;
&lt;li&gt;дополнительно открыл резюме на &lt;strong&gt;HH&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;через несколько дней закрываю резюме и продолжаю собесы с теми компаниями, с которыми произошел коннект&lt;/li&gt;
&lt;li&gt;каких-то проблем с поиском работы из-за &lt;strong&gt;СВО&lt;/strong&gt; я не увидел, всё произошло как и два года назад&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;Кто-нибудь может раскритиковать такой подход, но для себя я так и не придумал более оптимального алгоритма. Как объединить адекватные сроки поиска, большое количество собеседований и интересные проекты.&lt;/p&gt;</content><category term="python"></category><category term="python"></category><category term="job"></category><category term="search"></category></entry><entry><title>Вопросы на собеседованиях Middle Python 2023</title><link href="https://dkurchigin.github.io/qa-middle-2023" rel="alternate"></link><published>2023-09-10T16:00:00+03:00</published><updated>2023-09-10T16:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2023-09-10:/qa-middle-2023</id><summary type="html">&lt;p&gt;Что часто у меня спрашивали на собесах&lt;/p&gt;</summary><content type="html">&lt;p&gt;Привет, мир!&lt;/p&gt;
&lt;p&gt;Решил записать основные вопросы, которые у меня спрашивали на собесах для &lt;strong&gt;мидла&lt;/strong&gt; на &lt;strong&gt;Python&lt;/strong&gt;. 
Здесь будут только вопросы, без ответов. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Почему?&lt;/strong&gt; Потому что вы сами сможите погуглить в различных источниках, разобраться как в глубь, так и в ширь.&lt;/p&gt;
&lt;h3&gt;Общие вопросы&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Как проходит твой день? Как тебе спускают задачу на разработку, как ты справляешься?&lt;/li&gt;
&lt;li&gt;Что по твоему мнению идеальный код?&lt;/li&gt;
&lt;li&gt;Какие принципы разработки ты знаешь? Что такое KISS, DRY, SOLID?&lt;/li&gt;
&lt;li&gt;Как проходит код-ревью, на что обращаешь внимание?&lt;/li&gt;
&lt;li&gt;Объясни своими словами, что такое rebase в git&lt;/li&gt;
&lt;li&gt;Как в ОС могут обмениваться данными процессы&lt;/li&gt;
&lt;li&gt;Как в ОС появились мультипроцессорность, мультипоточность, асинхронность. Как реализованы?&lt;/li&gt;
&lt;li&gt;Разница между TCP и UDP&lt;/li&gt;
&lt;li&gt;Разница между виртуализацией и контейнеризацией&lt;/li&gt;
&lt;li&gt;Что такое REST?&lt;/li&gt;
&lt;li&gt;Какие методы HTTP ты знаешь?&lt;/li&gt;
&lt;li&gt;Что такое идемпотентность и какие методы идемпотенты?&lt;/li&gt;
&lt;li&gt;Разница между аутентификацией и авторизацией&lt;/li&gt;
&lt;li&gt;Разница HTTP и HTTPS соединений. Какие у них порты? Что такое SSL и TLS?&lt;/li&gt;
&lt;li&gt;HTTPS, как происходит шифрование? Симметричное/асимметричное&lt;/li&gt;
&lt;li&gt;Что такое Cookie?&lt;/li&gt;
&lt;li&gt;Что такое CORS? &lt;/li&gt;
&lt;li&gt;Как устроено хранилище s3?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h3&gt;Python&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Типы данных и как их можно классифицировать?&lt;/li&gt;
&lt;li&gt;Как работает словарь?&lt;/li&gt;
&lt;li&gt;Стоимость доступа к элементу в словаре?&lt;/li&gt;
&lt;li&gt;Что такое коллизия?&lt;/li&gt;
&lt;li&gt;Что такое декоратор?&lt;/li&gt;
&lt;li&gt;Что такое контекстный менеджер?&lt;/li&gt;
&lt;li&gt;Как работает Prometheus?&lt;/li&gt;
&lt;li&gt;Мультипроцессорность, мультипоточность, асинхронность в Python&lt;/li&gt;
&lt;li&gt;FastApi. Dependency Injection&lt;/li&gt;
&lt;li&gt;Что такое GIL?&lt;/li&gt;
&lt;li&gt;Различные задачки с подъёбками на mutable/immutable/functions/arrays/dicts/sets&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h3&gt;DataBases&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Как устроен индекс и за счет чего происходит оптимизация?&lt;/li&gt;
&lt;li&gt;Свойства транзакции и что такое транзакция?&lt;/li&gt;
&lt;li&gt;Как будешь искать и оптимизировать запрос, который долго выполняется?&lt;/li&gt;
&lt;li&gt;Вопросы по монге&lt;/li&gt;
&lt;li&gt;Задачки с подъёбками, но простые&lt;/li&gt;
&lt;/ul&gt;</content><category term="python"></category><category term="python"></category><category term="interview"></category></entry><entry><title>Ставлю PCEP-30-02 на паузу</title><link href="https://dkurchigin.github.io/pcep-paused" rel="alternate"></link><published>2023-08-15T16:00:00+03:00</published><updated>2023-08-15T16:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2023-08-15:/pcep-paused</id><summary type="html">&lt;p&gt;В данный момент не могу сдать сертификацию&lt;/p&gt;</summary><content type="html">&lt;p&gt;Привет! &lt;/p&gt;
&lt;p&gt;Ставлю на паузу сдачу сертификации &lt;a href="https://pythoninstitute.org/pcep"&gt;&lt;strong&gt;PCEP&lt;/strong&gt;&lt;/a&gt; т.к. не могу купить ваучер на прохождение экзамена, в списке стран нет России. При чем в правилах сдачи нельзя указывать неактуальные данные, поэтому не решил рисковать и не ставить фейковую страну.&lt;/p&gt;
&lt;p&gt;Дополнительно написал в поддержку и вот что мне ответили:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;Hi&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Dmitry&lt;/span&gt;,
&lt;span class="nv"&gt;Thank&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;email&lt;/span&gt;.
&lt;span class="nv"&gt;This&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;country&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;available&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;on&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;list&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;countries&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;our&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;store&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;at&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;time&lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="python"></category><category term="python"></category><category term="certification"></category><category term="pcep"></category></entry><entry><title>PCEP-30-02 часть четвертая</title><link href="https://dkurchigin.github.io/try-to-pcep-fourth-part" rel="alternate"></link><published>2023-08-05T16:00:00+03:00</published><updated>2023-08-05T16:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2023-08-05:/try-to-pcep-fourth-part</id><summary type="html">&lt;p&gt;Продолжаю собирать инфу по подготовке к PCEP-30-02&lt;/p&gt;</summary><content type="html">&lt;p&gt;Привет! Продолжаем!&lt;/p&gt;
&lt;h3&gt;Section 4: Functions and Exceptions (28%)&lt;/h3&gt;
&lt;h4&gt;PCEP-30-02 4.1 – Decompose the code using functions&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;defining and invoking user-defined functions and generators - &lt;a href="https://www.geeksforgeeks.org/python-user-defined-functions/"&gt;&lt;strong&gt;Python User defined functions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the return keyword, returning results - &lt;a href="https://www.geeksforgeeks.org/python-return-statement/"&gt;&lt;strong&gt;Python return statement&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the None keyword - &lt;a href="https://www.geeksforgeeks.org/python-none-keyword/"&gt;&lt;strong&gt;Python None Keyword&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;recursion - &lt;a href="https://www.geeksforgeeks.org/recursion-in-python/"&gt;&lt;strong&gt;Recursion in Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;PCEP-30-02 4.2 – Organize interaction between the function and its environment&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;parameters vs. arguments - &lt;a href="https://stackoverflow.com/questions/47169033/parameter-vs-argument-python"&gt;&lt;strong&gt;Parameter vs Argument Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;positional, keyword, and mixed argument passing - &lt;a href="https://proglib.io/p/samouchitel-po-python-dlya-nachinayushchih-chast-11-funkcii-s-pozicionnymi-i-imenovannymi-argumentami-2023-01-09"&gt;&lt;strong&gt;Функции с позиционными и именованными аргументами&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;default parameter values&lt;/li&gt;
&lt;li&gt;name scopes, name hiding (shadowing), and the global keyword - &lt;a href="https://www.onlinetutorialspoint.com/python/what-is-scope-in-python.html"&gt;&lt;strong&gt;What is Scope in Python ?&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;PCEP-30-02 4.3 – Python Built-In Exceptions Hierarchy&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;BaseException - &lt;a href="https://docs.python.org/3/library/exceptions.html#BaseException"&gt;&lt;strong&gt;BaseException&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Exception - &lt;a href="https://docs.python.org/3/library/exceptions.html#Exception"&gt;&lt;strong&gt;Exception&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SystemExit - &lt;a href="https://docs.python.org/3/library/exceptions.html#SystemExit"&gt;&lt;strong&gt;SystemExit&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;KeyboardInterrupt - &lt;a href="https://docs.python.org/3/library/exceptions.html#KeyboardInterrupt"&gt;&lt;strong&gt;KeyboardInterrupt&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;abstract exceptions&lt;/li&gt;
&lt;li&gt;ArithmeticError - &lt;a href="https://docs.python.org/3/library/exceptions.html#ArithmeticError"&gt;&lt;strong&gt;ArithmeticError&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;LookupError - &lt;a href="https://docs.python.org/3/library/exceptions.html#LookupError"&gt;&lt;strong&gt;LookupError&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;IndexError - &lt;a href="https://docs.python.org/3/library/exceptions.html#IndexError"&gt;&lt;strong&gt;IndexError&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;KeyError - &lt;a href="https://docs.python.org/3/library/exceptions.html#KeyError"&gt;&lt;strong&gt;KeyError&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;TypeError - &lt;a href="https://docs.python.org/3/library/exceptions.html#TypeError"&gt;&lt;strong&gt;TypeError&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ValueError - &lt;a href="https://docs.python.org/3/library/exceptions.html#ValueError"&gt;&lt;strong&gt;ValueError&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;PCEP-30-02 4.4 – Basics of Python Exception Handling&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;try-except / the try-except Exception - &lt;a href="https://docs.python.org/3/tutorial/errors.html"&gt;&lt;strong&gt;Errors and Exceptions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ordering the except branches&lt;/li&gt;
&lt;li&gt;propagating exceptions through function boundaries&lt;/li&gt;
&lt;li&gt;delegating responsibility for handling exceptions&lt;/li&gt;
&lt;/ul&gt;</content><category term="python"></category><category term="python"></category><category term="certification"></category><category term="pcep"></category></entry><entry><title>PCEP-30-02 часть третья</title><link href="https://dkurchigin.github.io/try-to-pcep-third-part" rel="alternate"></link><published>2023-08-05T12:00:00+03:00</published><updated>2023-08-05T12:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2023-08-05:/try-to-pcep-third-part</id><summary type="html">&lt;p&gt;Продолжаю собирать инфу по подготовке к PCEP-30-02&lt;/p&gt;</summary><content type="html">&lt;p&gt;Привет! Продолжаем!&lt;/p&gt;
&lt;h3&gt;Section 3: Data Collections – Tuples, Dictionaries, Lists, and Strings (25%)&lt;/h3&gt;
&lt;h4&gt;PCEP-30-02 3.1 – Collect and process data using lists&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;constructing vectors&lt;/li&gt;
&lt;li&gt;indexing and slicing - &lt;a href="https://www.geeksforgeeks.org/python-list-slicing/"&gt;&lt;strong&gt;Python List Slicing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the len() function - &lt;a href="https://docs-python.ru/tutorial/vstroennye-funktsii-interpretatora-python/funktsija-len/"&gt;&lt;strong&gt;Функция len() в Python, количество элементов объекта&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;list methods: append(), insert(), index(), etc. - &lt;a href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists"&gt;&lt;strong&gt;More on Lists&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;functions: len(), sorted() - &lt;a href="https://pythonru.com/osnovy/vozmozhnosti-i-primery-funkcii-sorted-v-python"&gt;&lt;strong&gt;Возможности и примеры функции sorted в Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the del instruction - &lt;a href="https://docs.python.org/3/tutorial/datastructures.html#the-del-statement"&gt;&lt;strong&gt;The del statement&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;iterating through lists with the for loop - &lt;a href="https://www.geeksforgeeks.org/iterate-over-a-list-in-python/"&gt;&lt;strong&gt;Iterate over a list in Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;initializing loops&lt;/li&gt;
&lt;li&gt;the in and not in operators - &lt;a href="https://pythonturbo.ru/operatory-in-i-not-in-v-python/"&gt;&lt;strong&gt;Операторы in и not in в Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;list comprehensions - &lt;a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions"&gt;&lt;strong&gt;List Comprehensions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;copying and cloning - &lt;a href="https://www.geeksforgeeks.org/python-cloning-copying-list/"&gt;&lt;strong&gt;Python | Cloning or Copying a list&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;lists in lists: matrices and cubes - &lt;a href="https://fullstacker.ru/rabota-s-vlozhennymi-spiskami-v-python"&gt;&lt;strong&gt;Работа с вложенными списками в Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;PCEP-30-02 3.2 – Collect and process data using tuples&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;tuples: indexing, slicing, building, immutability - &lt;a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences"&gt;&lt;strong&gt;Tuples and Sequences&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;tuples vs. lists: similarities and differences&lt;/li&gt;
&lt;li&gt;lists inside tuples and tuples inside lists&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;PCEP-30-02 3.3 Collect and process data using dictionaries&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;dictionaries: building, indexing, adding and removing keys - &lt;a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries"&gt;&lt;strong&gt;Dictionaries&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;iterating through dictionaries and their keys and values - &lt;a href="https://docs.python.org/3/tutorial/datastructures.html#looping-techniques"&gt;&lt;strong&gt;Looping Techniques&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;checking the existence of keys - &lt;a href="https://www.geeksforgeeks.org/python-check-whether-given-key-already-exists-in-a-dictionary/"&gt;&lt;strong&gt;Check whether given Key already exists in a Python Dictionary&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;methods: keys(), items(), and values()&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;PCEP-30-02 3.4 Operate with strings&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;constructing strings&lt;/li&gt;
&lt;li&gt;indexing, slicing, immutability - &lt;a href="https://www.geeksforgeeks.org/why-are-python-strings-immutable/"&gt;&lt;strong&gt;Why are Python Strings Immutable?&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;escaping using the \ character - &lt;a href="https://www.freecodecamp.org/news/escape-sequences-python/"&gt;&lt;strong&gt;Escape Sequences in Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;quotes and apostrophes inside strings - &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-format-text-in-python-3"&gt;&lt;strong&gt;How To Format Text in Python 3&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;multi-line strings - &lt;a href="https://www.askpython.com/python/string/python-multiline-strings"&gt;&lt;strong&gt;4 Techniques to Create Python Multiline Strings&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;basic string functions and methods - &lt;a href="https://docs.python.org/3/library/string.html"&gt;&lt;strong&gt;string — Common string operations&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="python"></category><category term="python"></category><category term="certification"></category><category term="pcep"></category></entry><entry><title>PCEP-30-02 часть вторая</title><link href="https://dkurchigin.github.io/try-to-pcep-second-part" rel="alternate"></link><published>2023-08-03T20:00:00+03:00</published><updated>2023-08-03T20:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2023-08-03:/try-to-pcep-second-part</id><summary type="html">&lt;p&gt;Продолжаю собирать инфу по подготовке к PCEP-30-02&lt;/p&gt;</summary><content type="html">&lt;p&gt;Привет! Продолжаем!&lt;/p&gt;
&lt;h3&gt;Section 2: Control Flow – Conditional Blocks and Loops (29%)&lt;/h3&gt;
&lt;h4&gt;PCEP-30-02 2.1 – Make decisions and branch the flow with the if instruction&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;conditional statements: if, if-else, if-elif, if-elif-else - &lt;a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements"&gt;&lt;strong&gt;if Statements&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;multiple conditional statements - &lt;a href="https://www.geeksforgeeks.org/check-multiple-conditions-in-if-statement-python/"&gt;&lt;strong&gt;Мультиусловия&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;nesting conditional statements - &lt;a href="https://www.geeksforgeeks.org/nested-if-statement-in-python/"&gt;&lt;strong&gt;Вложенные иф-ы&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;PCEP-30-02 2.2 – Perform different types of iterations&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;the pass instruction - &lt;a href="https://www.geeksforgeeks.org/check-multiple-conditions-in-if-statement-python/"&gt;&lt;strong&gt;pass&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;building loops with while, for, range(), and in - &lt;a href="https://devtut.github.io/python/loops.html#iterating-over-lists"&gt;&lt;strong&gt;Всё про циклы&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;iterating through sequences &lt;/li&gt;
&lt;li&gt;expanding loops with while-else and for-else - &lt;a href="https://codebra.ru/ru/lessons-python/hellopython/10/4"&gt;&lt;strong&gt;Циклы for/else и while/else в Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;nesting loops and conditional statements - Просто циклы в цикле и условия в них&lt;/li&gt;
&lt;li&gt;controlling loop execution with break and continue - &lt;a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops"&gt;&lt;strong&gt;break and continue Statements, and else Clauses on Loops&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="python"></category><category term="python"></category><category term="certification"></category><category term="pcep"></category></entry><entry><title>Первые шаги к PCEP-30-02</title><link href="https://dkurchigin.github.io/try-to-pcep" rel="alternate"></link><published>2023-07-29T16:00:00+03:00</published><updated>2023-07-29T16:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2023-07-29:/try-to-pcep</id><summary type="html">&lt;p&gt;Нашёл инфу про сертификацию на Python и решил поставить себе цель&lt;/p&gt;</summary><content type="html">&lt;p&gt;Привет!&lt;/p&gt;
&lt;p&gt;Возникла идея поставить цель и сдать сертификаю на Python. Начну с &lt;a href="https://pythoninstitute.org/pcep"&gt;&lt;strong&gt;PCEP&lt;/strong&gt;&lt;/a&gt; - это начальный уровень. 
Здесь планирую помечать основные темы и ссылки по подготовке к ним, поехали с первой секции:&lt;/p&gt;
&lt;h3&gt;Section 1: Computer Programming and Python Fundamentals&lt;/h3&gt;
&lt;h4&gt;PCEP-30-02 1.1 – Understand fundamental terms and definitions&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;interpreting and the interpreter, compilation and the compiler - Разница между интерпретатором и компилятором. Вкратце: &lt;a href="https://forum.itvdn.com/t/urok-1-interpretator-i-kompilyator/2938"&gt;&lt;strong&gt;Интерпретатор и компилятор&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;lexis, syntax, and semantics - Про список слов, правила написания и их смысл &lt;a href="https://info-master.su/programming/profi/programming-languages.php"&gt;&lt;strong&gt;Языки программирования&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;PCEP-30-02 1.2 – Understand Python’s logic and structure&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;keywords - &lt;a href="https://docs.python.org/3/reference/lexical_analysis.html#keywords"&gt;&lt;strong&gt;Keywords&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;instructions - Просто построчная запись&lt;/li&gt;
&lt;li&gt;indentation - Отступы &lt;a href="https://docs.python.org/3/reference/lexical_analysis.html#indentation"&gt;&lt;strong&gt;Indentation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;comments - Комментарии &lt;a href="https://docs.python.org/3/reference/lexical_analysis.html#comments"&gt;&lt;strong&gt;Comments&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;PCEP-30-02 1.3 – Introduce literals and variables into code and use different numeral systems&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Boolean, integers, floating-point numbers - тут всё просто&lt;/li&gt;
&lt;li&gt;scientific notation - &lt;a href="https://www.scaler.com/topics/python-scientific-notation/"&gt;&lt;strong&gt;Python Scientific Notation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;strings - тут всё просто&lt;/li&gt;
&lt;li&gt;binary, octal, decimal, and hexadecimal numeral systems - &lt;a href="https://note.nkmk.me/en/python-bin-oct-hex-int-format/"&gt;&lt;strong&gt;Numbers&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;variables - &lt;a href="https://www.geeksforgeeks.org/python-variables/"&gt;&lt;strong&gt;Variables&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;naming conventions - &lt;a href="https://peps.python.org/pep-0008/#function-and-variable-names"&gt;&lt;strong&gt;PEP8&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;implementing PEP-8 recommendations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;PCEP-30-02 1.4 – Choose operators and data types adequate to the problem&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;numeric operators: ** * / % // + – &lt;a href="https://www.geeksforgeeks.org/python-arithmetic-operators/"&gt;&lt;strong&gt;Python Arithmetic Operators&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;string operators: * + - &lt;a href="https://www.educba.com/string-operators-in-python/"&gt;&lt;strong&gt;String Operators in Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;assignment and shortcut operators - &lt;a href="https://orclqa.com/python-assignment-shortcut-operators/"&gt;&lt;strong&gt;Assignment and Shortcut Operators&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;unary and binary operators - &lt;a href="https://overiq.com/python-101/operators-in-python/#arithmetic-operators"&gt;&lt;strong&gt;Arithmetic Operators&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;priorities and binding - &lt;a href="https://pythonru.com/uroki/29-prioritetnost-i-associativnost-operatorov-dlja-nachinajushhih"&gt;&lt;strong&gt;Приоритетность и ассоциативность операторов&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;bitwise operators: ~ &amp;amp; ^ | &amp;lt;&amp;lt; &amp;gt;&amp;gt; - &lt;a href="https://wiki.python.org/moin/BitwiseOperators"&gt;&lt;strong&gt;BitwiseOperators&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Boolean operators: not, and, or - &lt;a href="https://www.geeksforgeeks.org/python-logical-operators/"&gt;&lt;strong&gt;Python Logical Operators with Examples&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Boolean expressions&lt;/li&gt;
&lt;li&gt;relational operators ( == != &amp;gt; &amp;gt;= &amp;lt; &amp;lt;= ) - &lt;a href="https://www.geeksforgeeks.org/relational-operators-in-python/"&gt;&lt;strong&gt;Relational Operators in Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the accuracy of floating-point numbers - &lt;a href="https://habr.com/ru/companies/skillfactory/articles/658277/"&gt;&lt;strong&gt;Как работать с числами с плавающей точкой в Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;type casting - &lt;a href="https://codechick.io/tutorials/python/type-conversion-and-casting"&gt;&lt;strong&gt;Преобразование и приведение типов в Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h4&gt;PCEP-30-02 1.5 – Perform Input/Output console operations&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;the print() and input() functions - &lt;a href="https://codechick.io/tutorials/python/input-output-import"&gt;&lt;strong&gt;Ввод, вывод и импорт в Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the sep= and end= keyword parameters - &lt;a href="https://pythonru.com/osnovy/python-print"&gt;&lt;strong&gt;Функция Print() в Python&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the int() and float() functions&lt;/li&gt;
&lt;/ul&gt;</content><category term="python"></category><category term="python"></category><category term="certification"></category><category term="pcep"></category></entry><entry><title>Как я поднял блог с помощью Pelican</title><link href="https://dkurchigin.github.io/startup-pelican" rel="alternate"></link><published>2023-07-17T16:00:00+03:00</published><updated>2023-07-17T16:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2023-07-17:/startup-pelican</id><summary type="html">&lt;p&gt;Моё первое впечатление от Pelican&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Имеем на входе:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Старый блог на Jekyll&lt;/li&gt;
&lt;li&gt;Уже готовый дизайн(html+css)&lt;/li&gt;
&lt;li&gt;Знания Python, Jekyll, Django и Jinja&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h3&gt;Почему я выбрал Pelican:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Свежий проект, сообщество активно контрибьютит&lt;/li&gt;
&lt;li&gt;Страницы генерируются на основе markdown, как и Jekyll&lt;/li&gt;
&lt;li&gt;В темплейтах используется Jinja2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;h3&gt;Мой HowTo:&lt;/h3&gt;
&lt;p&gt;1.) Делаем первый шаг &lt;a href="https://docs.getpelican.com/en/latest/install.html"&gt;&lt;strong&gt;отсюда&lt;/strong&gt;&lt;/a&gt;. Устанавливаем Pelican, дополнительные пакеты и выполняем:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    pelican-quickstart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;2.) После создания минимальной структуры проекта я полез в &lt;em&gt;pelicanconf.py&lt;/em&gt;. Помимо основных настроек я прописал свой, к примеру TELEGRAM_USERNAME. Вид моего конфига:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;AUTHOR&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;dkurchigin&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;SITENAME&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Типичный Python разработчик&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;SITESUBTITLE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;О программировании, мелочах жизни и многом другом...&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;SITEURL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;https://dkurchigin.github.io/&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;PATH&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;content&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TIMEZONE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Europe/Moscow&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Russian&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;TELEGRAM_USERNAME&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;dirty_rotten_imb&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;GITHUB_USERNAME&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;dkurchigin&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;EMAIL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;kurchigin.dmitry@yandex.ru&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;THEME&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;3.) Для смены стандартной схемы создал &lt;a href="https://docs.getpelican.com/en/latest/themes.html#structure"&gt;&lt;strong&gt;следующую структуру&lt;/strong&gt;&lt;/a&gt; в корне проекта&lt;/p&gt;
&lt;p&gt;&lt;img alt="pelican_structure" src="https://dkurchigin.github.io/theme/images/pelican_structure.JPG"&gt;&lt;/p&gt;
&lt;p&gt;4.) Подсмотреть базовый синтаксис и логику темплейтов можно в &lt;a href="https://github.com/getpelican/pelican/tree/master/pelican/themes"&gt;&lt;strong&gt;стандартной теме&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;5.) Для локального дебага делаю &lt;strong&gt;make html&lt;/strong&gt;, а затем &lt;strong&gt;make serve&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;6.) Для публикации на &lt;strong&gt;Github Pages&lt;/strong&gt; делаю так:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;html&lt;/span&gt;
    &lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;output&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="n"&gt;gh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;
    &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="n"&gt;origin&lt;/span&gt; &lt;span class="n"&gt;gh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;7.) В настройках репозитория во вкладке &lt;strong&gt;Pages&lt;/strong&gt; указываю, что необходимо забирать контент из ветки &lt;strong&gt;gh-pages&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="github_pages_settings" src="https://dkurchigin.github.io/theme/images/github_pages_settings.JPG"&gt;&lt;/p&gt;
&lt;p&gt;8.) &lt;strong&gt;ENJOY!&lt;/strong&gt;&lt;/p&gt;</content><category term="python"></category><category term="python"></category><category term="pelican"></category><category term="blog"></category></entry><entry><title>Переезд с Jekyll на Pelican</title><link href="https://dkurchigin.github.io/moved-from-jekyll" rel="alternate"></link><published>2023-07-16T16:00:00+03:00</published><updated>2023-07-16T16:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2023-07-16:/moved-from-jekyll</id><summary type="html">&lt;p&gt;Перенес старый блог с Jekyll на Pelican и скорректировал тематику&lt;/p&gt;</summary><content type="html">&lt;p&gt;Привет, Мир!&lt;/p&gt;
&lt;p&gt;Решил возобновить блогерскую деятельность т.к. возникло куча мыслей и историй, которыми хотелось бы с кем-то поделиться.
Всему виной моя карьера в IT и небольшое количество людей, которые "в теме".&lt;/p&gt;
&lt;p&gt;Что с прошлым блогом?
Последний пост на старом блоге имеет дату пятилетней давности и на днях я решил его оживить. Но к сожалению, часть фичей в &lt;a href="https://jekyllrb.com/"&gt;&lt;strong&gt;Jekyll&lt;/strong&gt;&lt;/a&gt; устарели и перестали работать.&lt;/p&gt;
&lt;p&gt;Поэтому решил взять самый свежий статический генератор сайтов на &lt;strong&gt;Python&lt;/strong&gt; и это &lt;a href="https://docs.getpelican.com/en/latest/"&gt;&lt;strong&gt;Pelican&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="python"></category><category term="python"></category><category term="pelican"></category><category term="jekyll"></category></entry><entry><title>IP-сканер на Perl</title><link href="https://dkurchigin.github.io/perl-ping" rel="alternate"></link><published>2016-06-02T16:00:00+03:00</published><updated>2016-06-02T16:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2016-06-02:/perl-ping</id><summary type="html">&lt;p&gt;Написал простенькую пинговалку на PERL для Windows и Linux&lt;/p&gt;</summary><content type="html">&lt;p&gt;Привет!&lt;/p&gt;
&lt;p&gt;Написал простенькую пинговалку на &lt;strong&gt;PERL&lt;/strong&gt; для &lt;strong&gt;Windows&lt;/strong&gt; и &lt;strong&gt;Linux&lt;/strong&gt;. Сканер можно скачать &lt;a href="https://github.com/dkurchigin/perl/tree/master/ip-scanner"&gt;&lt;strong&gt;здесь&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Сканер позволяет автоматически пинговать адреса из файла &lt;strong&gt;&lt;em&gt;"ip_list"&lt;/em&gt;&lt;/strong&gt; и выводить их состояние на экран.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Внимание:&lt;/strong&gt; Последняя версия сканера реализована с помощью модуля &lt;a href="http://search.cpan.org/dist/perl-5.8.0/lib/Net/Ping.pm"&gt;&lt;strong&gt;Net::Ping&lt;/strong&gt;&lt;/a&gt;, что обеспечивает кроссплатформенность. Для определения статуса ip-адреса используется протокол icmp, поэтому скрипт требует запуска с правами администратора.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Программа поддерживает параметры:&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;-v - Настройка вывода результатов работы. Возможные значения: &lt;strong&gt;&lt;em&gt;only_up&lt;/em&gt;&lt;/strong&gt; и &lt;strong&gt;&lt;em&gt;only_down&lt;/em&gt;&lt;/strong&gt; - показывать только активные и не активные адреса соответственно. По умолчанию отображаются все адреса. &lt;/p&gt;
&lt;p&gt;-c - Путь до файла с адресами. По умолчанию программа берет данные из файла &lt;strong&gt;&lt;em&gt;"ip_list"&lt;/em&gt;&lt;/strong&gt;, значения пути до файла можно задавать как относительным, так и абсолютным. Запуск с параметрами возможен как из консоли, так и по ярлыку. &lt;/p&gt;
&lt;p&gt;-t - время таймаута, задается в секундах, по умолчанию &lt;strong&gt;&lt;em&gt;3с&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Пример:&lt;/strong&gt; &lt;em&gt;perl scanner.pl -v=only_up -c=D:\somefile -t=5&lt;/em&gt;&lt;/p&gt;</content><category term="python"></category><category term="programming"></category><category term="perl"></category></entry><entry><title>Бубен для главного шамана!</title><link href="https://dkurchigin.github.io/buben" rel="alternate"></link><published>2015-10-08T16:00:00+03:00</published><updated>2015-10-08T16:00:00+03:00</updated><author><name>dkurchigin</name></author><id>tag:dkurchigin.github.io,2015-10-08:/buben</id><summary type="html">&lt;p&gt;На старой работе в свое время дарили бубен… Как главному шаману…&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="Шаманский бубен" src="https://dkurchigin.github.io/theme/images/tumblr_nvqnvwKJIt1uh3r1eo1_1280.jpg"&gt;
На старой работе в свое время дарили бубен… Как главному шаману…&lt;/p&gt;</content><category term="python"></category><category term="programming"></category><category term="humor"></category></entry></feed>